import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as t,c,a as e,b as i,e as l,f as r}from"./app-c618f770.js";const d={},s=r('<figure><img src="https://nevermore-picbed-1304219157.cos.ap-guangzhou.myqcloud.com/20220424174635.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>容器即父元素，项目即子元素</p><h2 id="flex-container容器" tabindex="-1"><a class="header-anchor" href="#flex-container容器" aria-hidden="true">#</a> Flex container容器</h2><p><code>display: flex | inline-flex;</code> 分别生成一个块状或行内的 flex 容器盒子。简单说来，如果你使用块元素如 div，你就可以使用 flex，而如果你使用行内元素，你可以使用 inline-flex。</p><p>有下面六种属性可以设置在容器上：</p><ol><li><code>flex-direction</code> 主轴的方向 （默认：row 水平）</li><li><code>flex-wrap</code> 容器内项目是否可换行 (默认：nowrap 不换行 常用：wrap)</li><li><code>flex-flow</code> flex-direction 和 flex-wrap 的简写形式 （没用）</li><li><code>justify-content</code> 项目在主轴的对齐方式。（默认: flex-start 左对齐）</li></ol><figure><img src="https://nevermore-picbed-1304219157.cos.ap-guangzhou.myqcloud.com/20230119183329.png" alt="justify-content属性" tabindex="0" loading="lazy"><figcaption>justify-content属性</figcaption></figure><ol start="5"><li><code>align-items</code> 项目在交叉轴上的对齐方式（默认：stretch 即如果项目未设置高度或者设为 auto，将占满整个容器的高度。）</li></ol><figure><img src="https://nevermore-picbed-1304219157.cos.ap-guangzhou.myqcloud.com/20230119185222.png" alt="align-items属性" tabindex="0" loading="lazy"><figcaption>align-items属性</figcaption></figure><ol start="6"><li><code>align-content</code> 多根轴线的对齐方式，如果项目只有一根轴线，即<code>flex-wrap: nowrap</code> 不换行，那么该属性将不起作用（默认值为 stretch）</li></ol><figure><img src="https://nevermore-picbed-1304219157.cos.ap-guangzhou.myqcloud.com/20230119190026.png" alt="align-content属性" tabindex="0" loading="lazy"><figcaption>align-content属性</figcaption></figure><h2 id="flex-item项目" tabindex="-1"><a class="header-anchor" href="#flex-item项目" aria-hidden="true">#</a> Flex item项目</h2><p>有下面六种属性可以设置在项目上：</p><ol><li><code>order</code> 项目在容器中的排列顺序，数值越小，排列越靠前（默认值为 0）</li><li><code>flex-basis</code> 项目在主轴上占据的空间（默认值：auto，即项目本来的大小，优先级高于 weight、height）</li><li><code>flex-grow</code> 项目的放大拉伸比例（默认值为 0，即如果存在多余空间，也不放大） <ul><li>如果所有项目的<code>flex-grow</code>属性都为 1，则它们将等分剩余空间（如果有的话）。</li><li>当flex container在主轴方向上有剩余size时，才生效。</li></ul></li><li><code>flex-shrink</code> 项目的缩小比例（默认值: 1，即如果空间不足，该项目将缩小，负值对该属性无效）</li><li><code>flex</code> flex-grow, flex-shrink 和 flex-basis的简写（默认值是 0 1 auto）<br> 有关快捷值：<code>auto (1 1 auto)</code> 、 <code>none (0 0 auto)</code> 、<code>1</code><br> 建议优先使用这个属性，而不是单独写三个分离的属性。</li><li><code>align-self</code> 单个项目在交叉轴的对齐方式 (center、flex-end)</li></ol><figure><img src="https://nevermore-picbed-1304219157.cos.ap-guangzhou.myqcloud.com/20230119205617.png" alt="align-self属性" tabindex="0" loading="lazy"><figcaption>align-self属性</figcaption></figure><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',16),f={href:"https://zhuanlan.zhihu.com/p/25303493",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.bilibili.com/video/BV1oK4y1j7pa?p=1&share_medium=iphone&share_plat=ios&share_source=COPY&share_tag=s_i&timestamp=1610808415&unique_k=jqCDwC",target:"_blank",rel:"noopener noreferrer"};function p(u,h){const o=n("ExternalLinkIcon");return t(),c("div",null,[s,e("ul",null,[e("li",null,[e("a",f,[i("30 分钟学会 Flex 布局"),l(o)])]),e("li",null,[e("a",g,[i("20分钟掌握CSS Flex布局"),l(o)])])])])}const _=a(d,[["render",p],["__file","flex.html.vue"]]);export{_ as default};
